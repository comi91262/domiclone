// Code generated by goa v3.11.0, DO NOT EDIT.
//
// game endpoints
//
// Command:
// $ goa gen github.com/comi91262/domilike/design

package game

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "game" service endpoints.
type Endpoints struct {
	Get         goa.Endpoint
	Create      goa.Endpoint
	Delete      goa.Endpoint
	GetSupplies goa.Endpoint
	GetTrashes  goa.Endpoint
}

// NewEndpoints wraps the methods of the "game" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Get:         NewGetEndpoint(s),
		Create:      NewCreateEndpoint(s),
		Delete:      NewDeleteEndpoint(s),
		GetSupplies: NewGetSuppliesEndpoint(s),
		GetTrashes:  NewGetTrashesEndpoint(s),
	}
}

// Use applies the given middleware to all the "game" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.Get = m(e.Get)
	e.Create = m(e.Create)
	e.Delete = m(e.Delete)
	e.GetSupplies = m(e.GetSupplies)
	e.GetTrashes = m(e.GetTrashes)
}

// NewGetEndpoint returns an endpoint function that calls the method "get" of
// service "game".
func NewGetEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*GetPayload)
		return s.Get(ctx, p)
	}
}

// NewCreateEndpoint returns an endpoint function that calls the method
// "create" of service "game".
func NewCreateEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.Create(ctx)
	}
}

// NewDeleteEndpoint returns an endpoint function that calls the method
// "delete" of service "game".
func NewDeleteEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*DeletePayload)
		return nil, s.Delete(ctx, p)
	}
}

// NewGetSuppliesEndpoint returns an endpoint function that calls the method
// "get_supplies" of service "game".
func NewGetSuppliesEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*GetSuppliesPayload)
		return s.GetSupplies(ctx, p)
	}
}

// NewGetTrashesEndpoint returns an endpoint function that calls the method
// "get_trashes" of service "game".
func NewGetTrashesEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*GetTrashesPayload)
		return s.GetTrashes(ctx, p)
	}
}
