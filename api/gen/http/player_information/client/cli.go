// Code generated by goa v3.11.0, DO NOT EDIT.
//
// player-information HTTP client CLI support package
//
// Command:
// $ goa gen github.com/comi91262/domilike/design

package client

import (
	playerinformation "github.com/comi91262/domilike/gen/player_information"
)

// BuildCreatePayload builds the payload for the player-information create
// endpoint from CLI flags.
func BuildCreatePayload(playerInformationCreateToken string) (*playerinformation.CreatePayload, error) {
	var token string
	{
		token = playerInformationCreateToken
	}
	v := &playerinformation.CreatePayload{}
	v.Token = token

	return v, nil
}

// BuildDeletePayload builds the payload for the player-information delete
// endpoint from CLI flags.
func BuildDeletePayload(playerInformationDeleteToken string) (*playerinformation.DeletePayload, error) {
	var token string
	{
		token = playerInformationDeleteToken
	}
	v := &playerinformation.DeletePayload{}
	v.Token = token

	return v, nil
}

// BuildGetCoinsPayload builds the payload for the player-information get_coins
// endpoint from CLI flags.
func BuildGetCoinsPayload(playerInformationGetCoinsToken string) (*playerinformation.GetCoinsPayload, error) {
	var token string
	{
		token = playerInformationGetCoinsToken
	}
	v := &playerinformation.GetCoinsPayload{}
	v.Token = token

	return v, nil
}

// BuildGetVictoryPointsPayload builds the payload for the player-information
// get_victory_points endpoint from CLI flags.
func BuildGetVictoryPointsPayload(playerInformationGetVictoryPointsToken string) (*playerinformation.GetVictoryPointsPayload, error) {
	var token string
	{
		token = playerInformationGetVictoryPointsToken
	}
	v := &playerinformation.GetVictoryPointsPayload{}
	v.Token = token

	return v, nil
}

// BuildGetDecksPayload builds the payload for the player-information get_decks
// endpoint from CLI flags.
func BuildGetDecksPayload(playerInformationGetDecksToken string) (*playerinformation.GetDecksPayload, error) {
	var token string
	{
		token = playerInformationGetDecksToken
	}
	v := &playerinformation.GetDecksPayload{}
	v.Token = token

	return v, nil
}

// BuildGetDiscardsPayload builds the payload for the player-information
// get_discards endpoint from CLI flags.
func BuildGetDiscardsPayload(playerInformationGetDiscardsToken string) (*playerinformation.GetDiscardsPayload, error) {
	var token string
	{
		token = playerInformationGetDiscardsToken
	}
	v := &playerinformation.GetDiscardsPayload{}
	v.Token = token

	return v, nil
}

// BuildGetHandsPayload builds the payload for the player-information get_hands
// endpoint from CLI flags.
func BuildGetHandsPayload(playerInformationGetHandsToken string) (*playerinformation.GetHandsPayload, error) {
	var token string
	{
		token = playerInformationGetHandsToken
	}
	v := &playerinformation.GetHandsPayload{}
	v.Token = token

	return v, nil
}

// BuildGetPlayAreaPayload builds the payload for the player-information
// get_play_area endpoint from CLI flags.
func BuildGetPlayAreaPayload(playerInformationGetPlayAreaToken string) (*playerinformation.GetPlayAreaPayload, error) {
	var token string
	{
		token = playerInformationGetPlayAreaToken
	}
	v := &playerinformation.GetPlayAreaPayload{}
	v.Token = token

	return v, nil
}
