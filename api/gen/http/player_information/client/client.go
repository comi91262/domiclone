// Code generated by goa v3.11.0, DO NOT EDIT.
//
// player-information client HTTP transport
//
// Command:
// $ goa gen github.com/comi91262/domilike/design

package client

import (
	"context"
	"net/http"

	goahttp "goa.design/goa/v3/http"
	goa "goa.design/goa/v3/pkg"
)

// Client lists the player-information service endpoint HTTP clients.
type Client struct {
	// Create Doer is the HTTP client used to make requests to the create endpoint.
	CreateDoer goahttp.Doer

	// Delete Doer is the HTTP client used to make requests to the delete endpoint.
	DeleteDoer goahttp.Doer

	// GetCoins Doer is the HTTP client used to make requests to the get_coins
	// endpoint.
	GetCoinsDoer goahttp.Doer

	// GetVictoryPoints Doer is the HTTP client used to make requests to the
	// get_victory_points endpoint.
	GetVictoryPointsDoer goahttp.Doer

	// GetDecks Doer is the HTTP client used to make requests to the get_decks
	// endpoint.
	GetDecksDoer goahttp.Doer

	// GetDiscards Doer is the HTTP client used to make requests to the
	// get_discards endpoint.
	GetDiscardsDoer goahttp.Doer

	// GetHands Doer is the HTTP client used to make requests to the get_hands
	// endpoint.
	GetHandsDoer goahttp.Doer

	// GetPlayArea Doer is the HTTP client used to make requests to the
	// get_play_area endpoint.
	GetPlayAreaDoer goahttp.Doer

	// CORS Doer is the HTTP client used to make requests to the  endpoint.
	CORSDoer goahttp.Doer

	// RestoreResponseBody controls whether the response bodies are reset after
	// decoding so they can be read again.
	RestoreResponseBody bool

	scheme  string
	host    string
	encoder func(*http.Request) goahttp.Encoder
	decoder func(*http.Response) goahttp.Decoder
}

// NewClient instantiates HTTP clients for all the player-information service
// servers.
func NewClient(
	scheme string,
	host string,
	doer goahttp.Doer,
	enc func(*http.Request) goahttp.Encoder,
	dec func(*http.Response) goahttp.Decoder,
	restoreBody bool,
) *Client {
	return &Client{
		CreateDoer:           doer,
		DeleteDoer:           doer,
		GetCoinsDoer:         doer,
		GetVictoryPointsDoer: doer,
		GetDecksDoer:         doer,
		GetDiscardsDoer:      doer,
		GetHandsDoer:         doer,
		GetPlayAreaDoer:      doer,
		CORSDoer:             doer,
		RestoreResponseBody:  restoreBody,
		scheme:               scheme,
		host:                 host,
		decoder:              dec,
		encoder:              enc,
	}
}

// Create returns an endpoint that makes HTTP requests to the
// player-information service create server.
func (c *Client) Create() goa.Endpoint {
	var (
		encodeRequest  = EncodeCreateRequest(c.encoder)
		decodeResponse = DecodeCreateResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		req, err := c.BuildCreateRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		err = encodeRequest(req, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.CreateDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("player-information", "create", err)
		}
		return decodeResponse(resp)
	}
}

// Delete returns an endpoint that makes HTTP requests to the
// player-information service delete server.
func (c *Client) Delete() goa.Endpoint {
	var (
		encodeRequest  = EncodeDeleteRequest(c.encoder)
		decodeResponse = DecodeDeleteResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		req, err := c.BuildDeleteRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		err = encodeRequest(req, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.DeleteDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("player-information", "delete", err)
		}
		return decodeResponse(resp)
	}
}

// GetCoins returns an endpoint that makes HTTP requests to the
// player-information service get_coins server.
func (c *Client) GetCoins() goa.Endpoint {
	var (
		encodeRequest  = EncodeGetCoinsRequest(c.encoder)
		decodeResponse = DecodeGetCoinsResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		req, err := c.BuildGetCoinsRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		err = encodeRequest(req, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.GetCoinsDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("player-information", "get_coins", err)
		}
		return decodeResponse(resp)
	}
}

// GetVictoryPoints returns an endpoint that makes HTTP requests to the
// player-information service get_victory_points server.
func (c *Client) GetVictoryPoints() goa.Endpoint {
	var (
		encodeRequest  = EncodeGetVictoryPointsRequest(c.encoder)
		decodeResponse = DecodeGetVictoryPointsResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		req, err := c.BuildGetVictoryPointsRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		err = encodeRequest(req, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.GetVictoryPointsDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("player-information", "get_victory_points", err)
		}
		return decodeResponse(resp)
	}
}

// GetDecks returns an endpoint that makes HTTP requests to the
// player-information service get_decks server.
func (c *Client) GetDecks() goa.Endpoint {
	var (
		encodeRequest  = EncodeGetDecksRequest(c.encoder)
		decodeResponse = DecodeGetDecksResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		req, err := c.BuildGetDecksRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		err = encodeRequest(req, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.GetDecksDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("player-information", "get_decks", err)
		}
		return decodeResponse(resp)
	}
}

// GetDiscards returns an endpoint that makes HTTP requests to the
// player-information service get_discards server.
func (c *Client) GetDiscards() goa.Endpoint {
	var (
		encodeRequest  = EncodeGetDiscardsRequest(c.encoder)
		decodeResponse = DecodeGetDiscardsResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		req, err := c.BuildGetDiscardsRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		err = encodeRequest(req, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.GetDiscardsDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("player-information", "get_discards", err)
		}
		return decodeResponse(resp)
	}
}

// GetHands returns an endpoint that makes HTTP requests to the
// player-information service get_hands server.
func (c *Client) GetHands() goa.Endpoint {
	var (
		encodeRequest  = EncodeGetHandsRequest(c.encoder)
		decodeResponse = DecodeGetHandsResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		req, err := c.BuildGetHandsRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		err = encodeRequest(req, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.GetHandsDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("player-information", "get_hands", err)
		}
		return decodeResponse(resp)
	}
}

// GetPlayArea returns an endpoint that makes HTTP requests to the
// player-information service get_play_area server.
func (c *Client) GetPlayArea() goa.Endpoint {
	var (
		encodeRequest  = EncodeGetPlayAreaRequest(c.encoder)
		decodeResponse = DecodeGetPlayAreaResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		req, err := c.BuildGetPlayAreaRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		err = encodeRequest(req, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.GetPlayAreaDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("player-information", "get_play_area", err)
		}
		return decodeResponse(resp)
	}
}
