// Code generated by goa v3.11.0, DO NOT EDIT.
//
// player-information service
//
// Command:
// $ goa gen github.com/comi91262/domilike/design

package playerinformation

import (
	"context"

	"goa.design/goa/v3/security"
)

// Service is the player-information service interface.
type Service interface {
	// Create implements create.
	Create(context.Context, *CreatePayload) (res string, err error)
	// Delete implements delete.
	Delete(context.Context, *DeletePayload) (err error)
	// GetCoins implements get_coins.
	GetCoins(context.Context, *GetCoinsPayload) (res int, err error)
	// GetVictoryPoints implements get_victory_points.
	GetVictoryPoints(context.Context, *GetVictoryPointsPayload) (res int, err error)
	// GetDecks implements get_decks.
	GetDecks(context.Context, *GetDecksPayload) (res int, err error)
	// GetDiscards implements get_discards.
	GetDiscards(context.Context, *GetDiscardsPayload) (res int, err error)
	// GetHands implements get_hands.
	GetHands(context.Context, *GetHandsPayload) (res int, err error)
	// GetPlayArea implements get_play_area.
	GetPlayArea(context.Context, *GetPlayAreaPayload) (res int, err error)
}

// Auther defines the authorization functions to be implemented by the service.
type Auther interface {
	// JWTAuth implements the authorization logic for the JWT security scheme.
	JWTAuth(ctx context.Context, token string, schema *security.JWTScheme) (context.Context, error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "player-information"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [8]string{"create", "delete", "get_coins", "get_victory_points", "get_decks", "get_discards", "get_hands", "get_play_area"}

// CreatePayload is the payload type of the player-information service create
// method.
type CreatePayload struct {
	// JWT token used to perform authorization
	Token string
}

// DeletePayload is the payload type of the player-information service delete
// method.
type DeletePayload struct {
	// JWT token used to perform authorization
	Token string
}

// GetCoinsPayload is the payload type of the player-information service
// get_coins method.
type GetCoinsPayload struct {
	// JWT token used to perform authorization
	Token string
}

// GetDecksPayload is the payload type of the player-information service
// get_decks method.
type GetDecksPayload struct {
	// JWT token used to perform authorization
	Token string
}

// GetDiscardsPayload is the payload type of the player-information service
// get_discards method.
type GetDiscardsPayload struct {
	// JWT token used to perform authorization
	Token string
}

// GetHandsPayload is the payload type of the player-information service
// get_hands method.
type GetHandsPayload struct {
	// JWT token used to perform authorization
	Token string
}

// GetPlayAreaPayload is the payload type of the player-information service
// get_play_area method.
type GetPlayAreaPayload struct {
	// JWT token used to perform authorization
	Token string
}

// GetVictoryPointsPayload is the payload type of the player-information
// service get_victory_points method.
type GetVictoryPointsPayload struct {
	// JWT token used to perform authorization
	Token string
}
