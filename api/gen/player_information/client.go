// Code generated by goa v3.11.0, DO NOT EDIT.
//
// player-information client
//
// Command:
// $ goa gen github.com/comi91262/domilike/design

package playerinformation

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "player-information" service client.
type Client struct {
	CreateEndpoint           goa.Endpoint
	DeleteEndpoint           goa.Endpoint
	GetCoinsEndpoint         goa.Endpoint
	GetVictoryPointsEndpoint goa.Endpoint
	GetDecksEndpoint         goa.Endpoint
	GetDiscardsEndpoint      goa.Endpoint
	GetHandsEndpoint         goa.Endpoint
	GetPlayAreaEndpoint      goa.Endpoint
}

// NewClient initializes a "player-information" service client given the
// endpoints.
func NewClient(create, delete_, getCoins, getVictoryPoints, getDecks, getDiscards, getHands, getPlayArea goa.Endpoint) *Client {
	return &Client{
		CreateEndpoint:           create,
		DeleteEndpoint:           delete_,
		GetCoinsEndpoint:         getCoins,
		GetVictoryPointsEndpoint: getVictoryPoints,
		GetDecksEndpoint:         getDecks,
		GetDiscardsEndpoint:      getDiscards,
		GetHandsEndpoint:         getHands,
		GetPlayAreaEndpoint:      getPlayArea,
	}
}

// Create calls the "create" endpoint of the "player-information" service.
func (c *Client) Create(ctx context.Context, p *CreatePayload) (res string, err error) {
	var ires interface{}
	ires, err = c.CreateEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}

// Delete calls the "delete" endpoint of the "player-information" service.
func (c *Client) Delete(ctx context.Context, p *DeletePayload) (err error) {
	_, err = c.DeleteEndpoint(ctx, p)
	return
}

// GetCoins calls the "get_coins" endpoint of the "player-information" service.
func (c *Client) GetCoins(ctx context.Context, p *GetCoinsPayload) (res int, err error) {
	var ires interface{}
	ires, err = c.GetCoinsEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(int), nil
}

// GetVictoryPoints calls the "get_victory_points" endpoint of the
// "player-information" service.
func (c *Client) GetVictoryPoints(ctx context.Context, p *GetVictoryPointsPayload) (res int, err error) {
	var ires interface{}
	ires, err = c.GetVictoryPointsEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(int), nil
}

// GetDecks calls the "get_decks" endpoint of the "player-information" service.
func (c *Client) GetDecks(ctx context.Context, p *GetDecksPayload) (res int, err error) {
	var ires interface{}
	ires, err = c.GetDecksEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(int), nil
}

// GetDiscards calls the "get_discards" endpoint of the "player-information"
// service.
func (c *Client) GetDiscards(ctx context.Context, p *GetDiscardsPayload) (res int, err error) {
	var ires interface{}
	ires, err = c.GetDiscardsEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(int), nil
}

// GetHands calls the "get_hands" endpoint of the "player-information" service.
func (c *Client) GetHands(ctx context.Context, p *GetHandsPayload) (res int, err error) {
	var ires interface{}
	ires, err = c.GetHandsEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(int), nil
}

// GetPlayArea calls the "get_play_area" endpoint of the "player-information"
// service.
func (c *Client) GetPlayArea(ctx context.Context, p *GetPlayAreaPayload) (res int, err error) {
	var ires interface{}
	ires, err = c.GetPlayAreaEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(int), nil
}
