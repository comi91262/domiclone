// Code generated by goa v3.11.0, DO NOT EDIT.
//
// card gRPC client CLI support package
//
// Command:
// $ goa gen github.com/comi91262/domilike/design

package client

import (
	"encoding/json"
	"fmt"

	card "github.com/comi91262/domilike/gen/card"
	cardpb "github.com/comi91262/domilike/gen/grpc/card/pb"
)

// BuildGetPayload builds the payload for the card get endpoint from CLI flags.
func BuildGetPayload(cardGetMessage string) (*card.GetPayload, error) {
	var err error
	var message cardpb.GetRequest
	{
		if cardGetMessage != "" {
			err = json.Unmarshal([]byte(cardGetMessage), &message)
			if err != nil {
				return nil, fmt.Errorf("invalid JSON for message, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"id\": 8369734819711743268\n   }'")
			}
		}
	}
	v := &card.GetPayload{
		ID: int(message.Id),
	}

	return v, nil
}
