// Code generated by goa v3.11.0, DO NOT EDIT.
//
// card gRPC server encoders and decoders
//
// Command:
// $ goa gen github.com/comi91262/domilike/design

package server

import (
	"context"

	card "github.com/comi91262/domilike/gen/card"
	cardpb "github.com/comi91262/domilike/gen/grpc/card/pb"
	goagrpc "goa.design/goa/v3/grpc"
	"google.golang.org/grpc/metadata"
)

// EncodeGetResponse encodes responses from the "card" service "get" endpoint.
func EncodeGetResponse(ctx context.Context, v interface{}, hdr, trlr *metadata.MD) (interface{}, error) {
	result, ok := v.(string)
	if !ok {
		return nil, goagrpc.ErrInvalidType("card", "get", "string", v)
	}
	resp := NewProtoGetResponse(result)
	return resp, nil
}

// DecodeGetRequest decodes requests sent to "card" service "get" endpoint.
func DecodeGetRequest(ctx context.Context, v interface{}, md metadata.MD) (interface{}, error) {
	var (
		message *cardpb.GetRequest
		ok      bool
	)
	{
		if message, ok = v.(*cardpb.GetRequest); !ok {
			return nil, goagrpc.ErrInvalidType("card", "get", "*cardpb.GetRequest", v)
		}
	}
	var payload *card.GetPayload
	{
		payload = NewGetPayload(message)
	}
	return payload, nil
}
